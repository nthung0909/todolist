{"version":3,"sources":["components/account/account.jsx","components/signin/signin.jsx","components/signup/signup.jsx","App.js","serviceWorker.js","index.js"],"names":["server","Account","props","state","accounts","editRow","username","password","name","email","onDeleteClick","bind","onClickEdit","onChangeUsername","onChangePassword","onChangeName","onChangeEmail","onSubmitEdit","axios","post","then","response","setState","data","account_list","catch","error","console","log","event","this","target","value","item","index","id","ID","type","err","status","className","style","textAlign","href","float","map","key","onClick","color","onChange","React","Component","require","SignIn","onLogin","find","history","push","preventDefault","alert","backgroundColor","margin","onSubmit","required","SignUp","isSuccess","onSignup","onFullnameChange","onUsernameChange","onPasswordChange","onEmailChange","acount_list","App","loadLoginPage","location","pathname","path","component","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.32370e72.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './style.css';\nconst server='http://localhost:8000/api/account/';\nclass Account extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            accounts:[],\n            editRow:-1,\n            username:'',\n            password:'',\n            name:'',\n            email:''\n        }\n        this.onDeleteClick=this.onDeleteClick.bind(this);\n        this.onClickEdit=this.onClickEdit.bind(this);\n        this.onChangeUsername=this.onChangeUsername.bind(this);\n        this.onChangePassword=this.onChangePassword.bind(this);\n        this.onChangeName=this.onChangeName.bind(this);\n        this.onChangeEmail=this.onChangeEmail.bind(this);\n        this.onSubmitEdit=this.onSubmitEdit.bind(this);\n    }\n    componentDidMount() {\n        axios.post(server)\n            .then(response => {\n                // if(!response.data.isLogin)\n                //     this.props.history.push('/signin');\n                this.setState({'accounts': response.data.account_list});\n            })\n            .catch(error => console.log(error));\n    }\n    componentWillUnmount() {\n       // console.log(this.state.account_list);\n    }\n    onChangeUsername(event){\n        this.setState({username:event.target.value});\n    }\n    onChangePassword(event){\n        this.setState({password:event.target.value});\n    }\n    onChangeName(event){\n        this.setState({name:event.target.value});\n    }\n    onChangeEmail(event){\n        this.setState({email:event.target.value});\n    }\n    onClickEdit(item,index){\n        this.setState({editRow:index,name:item.name,username:item.username,\n            password:item.password,id:item.ID,email:item.email});\n    }\n    onSubmitEdit(){\n        axios.post(`${server}update`, {\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password,\n            email: this.state.email,\n            type: 2,\n            ID:this.state.id\n        })\n            .then(response => {\n                this.setState({accounts: response.data.account_list,editRow:-1});\n            }).catch(err => {\n            console.log(err);\n        });\n    }\n    onDeleteClick(id){\n        console.log(id);\n        axios.post(`${server}/delete?id=${id}`)\n            .then(response=>{\n                console.log(response.status);\n                this.setState({accounts:response.data.account_list});\n            })\n            .catch(err=>{\n                console.log(err);\n            });\n    }\n\n    render(){\n        return (\n            <div className='ui grid column container-fluid'>\n                <div className='row'></div>\n                <div className='two wide column'></div>\n                <div className='twelve wide column'>\n                    <div className='row'><h1 style={{textAlign:\"center\"}}>ACCOUNT LIST</h1>\n                        <a  href='/signup'><button className='ui green basic button' style={{float:\"right\"}}>\n                            Add account &nbsp; <i className=\"plus icon\"></i></button></a>\n                    </div>\n                    <table className=\"ui celled table green\">\n                        <thead >\n                        <tr>\n                            <th>ID</th>\n                            <th>Username</th>\n                            <th>Password</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Type</th>\n                            <th>Action</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.accounts.map((item,index)=>index !== this.state.editRow?<tr key={index}><td>{item.ID}</td>\n                                    <td>{item.username}</td>\n                                    <td>{item.password}</td>\n                                <td>{item.name}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.type===1?'admin':'normal user'}</td>\n                                    <td><a onClick={()=>{this.onDeleteClick(item.ID)}} style={{color:'red'}}>\n                                        <i className='x icon'></i></a> &nbsp;&nbsp;\n                                        <i style={{color:'green'}} onClick={()=>{this.onClickEdit(item,index)}} className='pencil icon'></i>\n                                    </td>\n                                </tr>\n                                :<tr key={item}>\n                                    <td>{item.ID}</td>\n                                    <td><input className='edit_input' type='text' name='username' value={this.state.username}\n                                        onChange={this.onChangeUsername}/></td>\n                                    <td>\n                                        <input className='edit_input' type='text' name='password' value={this.state.password}\n                                               onChange={this.onChangePassword}/>\n                                    </td>\n                                    <td>\n                                        <input className='edit_input' type='text' name='name' value={this.state.name}\n                                               onChange={this.onChangeName}/>\n                                    </td>\n                                    <td>\n                                        <input className='edit_input' type='text' name='email' value={this.state.email}\n                                               onChange={this.onChangeEmail}/>\n                                    </td>\n                                    <td>{item.type===1?'admin':'normal user'}</td>\n                                    <td>\n                                        <i style={{color:'green'}} onClick={()=>{this.onSubmitEdit()}} className='checkmark icon'></i>\n                                    </td>\n                                </tr>)}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Account;\n","import React from \"react\";\nconst axios=require('axios');\nconst server='http://localhost:8000/api/';\n\nclass SignIn  extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            accounts:[],\n            username:'',\n            password:''\n        };\n        this.onChangeUsername=this.onChangeUsername.bind(this);\n        this.onChangePassword=this.onChangePassword.bind(this);\n        this.onLogin=this.onLogin.bind(this);\n       // this.onResetPassword=this.onResetPassword.bind(this);\n    }\n    componentDidMount() {\n        axios.post(`${server}account`)\n            .then(response => {\n                this.setState({'accounts': response.data.account_list});\n                console.log(this.state.accounts);\n            })\n            .catch(error => console.log(error));\n    }\n    onChangeUsername(event){\n        this.setState({username:event.target.value});\n    }\n    onChangePassword(event){\n        this.setState({password:event.target.value});\n    }\n    // onResetPassword(event){\n    //     event.reset();\n    // }\n    onLogin(event){\n        var acc= this.state.accounts.find(item=>{\n            return item.username===this.state.username && item.password===this.state.password;\n        });\n        // axios.post(`${server}session/`,{\n        //     username: this.state.username,\n        //     password: this.state.password\n        // })\n        //     .then(response => {\n        //         this.setState({'accounts': response.data.account_list});\n        //         console.log(this.state.accounts);\n        //     })\n        //     .catch(error => console.log(error));\n        if(!acc){\n            event.preventDefault();\n            alert(\"Username or password is invalid!!!\");\n        }else{\n            this.props.history.push('/account');\n            event.preventDefault();\n        }\n    }\n\n    render() {\n        return (\n            <div className='ui grid three column container-fluid' >\n                <div className='row'></div>\n                <div className='row'></div>\n                <div className='row'></div>\n                <div className='row'></div>\n\n                <div className='column'>\n\n                </div>\n                <div className='column' style={{backgroundColor:'#CCE2FF',margin:'4px'}}>\n                    <div className='row'>\n                        <h1 style={{textAlign:\"center\"}}>Sign in</h1>\n                    </div>\n                    <br/>\n                    <form id=\"loginform\" className='ui large form' onSubmit={this.onLogin} >\n                        <div className='field'>\n                            <label>Username: </label>\n                            <input required type=\"text\" name=\"username\" value={this.state.username}\n                                   onChange={this.onChangeUsername}/>\n                        </div>\n                        <br />\n                        <div className='field'>\n                            <label>Username: </label>\n                            <input required type=\"password\" name=\"password\" value={this.state.password}\n                                   onChange={this.onChangePassword}/>\n                        </div>\n                        <br/>\n                        <button className='ui primary button' type=\"submit\" >Login</button>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Don't have account? <a href=\"/signup\">Register</a>\n                    </form>\n                </div>\n                <div className='column'>\n\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default SignIn;","import React from \"react\";\nconst axios=require('axios');\nconst server='http://localhost:8000/api/account/';\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);this.state={\n            isSuccess:false,\n            accounts:[],\n            name: '',\n            username: '',\n            password: '',\n            email: '',\n            type: 2\n        }\n        this.onSignup=this.onSignup.bind(this);\n        this.onFullnameChange=this.onFullnameChange.bind(this);\n        this.onUsernameChange=this.onUsernameChange.bind(this);\n        this.onPasswordChange=this.onPasswordChange.bind(this);\n        this.onEmailChange=this.onEmailChange.bind(this);\n    }\n    componentDidMount() {\n        axios.post(server)\n            .then(response => {\n                this.setState({'accounts': response.data.account_list});\n                console.log(this.state.accounts);\n            })\n            .catch(error => console.log(error));\n    }\n\n    onSignup(event){\n        var acc= this.state.accounts.find(item=>{\n            return item.username===this.state.username;\n        });\n        if(acc){\n            alert(\"Account exitst!!!\");\n            return event.preventDefault();\n        }else {\n            axios.post(`${server}add`, {\n                    name: this.state.name,\n                    username: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email,\n                    type: 2\n                })\n                .then(response => {\n                    this.setState({accounts: response.data.acount_list});\n                }).catch(err => {\n                    console.log(err);\n                });\n        }\n        this.props.history.push('/account');\n        return event.preventDefault();\n    }\n    onFullnameChange(event){\n        this.setState({name:event.target.value});\n    }\n    onUsernameChange(event){\n        this.setState({username:event.target.value});\n    }\n    onPasswordChange(event){\n        this.setState({password:event.target.value});\n    }\n    onEmailChange(event){\n        this.setState({email:event.target.value});\n    }\n    render( ) {\n        return (\n            <div className='ui grid three column container-fluid' >\n                <div className='row'></div>\n                <div className='row'></div>\n                <div className='row'></div>\n\n                <div className='column'>\n\n                </div>\n                <div className='column' style={{backgroundColor:'#CCE2FF',margin:'4px'}}>\n                    <div className='row'>\n                        <h1 style={{textAlign:\"center\"}}>Sign up</h1>\n                    </div>\n                    <br/>\n                    <form id=\"signinForm\" className='ui large form'  onSubmit={this.onSignup}>\n                        <div className='field'>\n                            <label>Fullname: </label>\n                            <input required type=\"text\" name=\"name\" value={this.state.name} onChange={this.onFullnameChange}/>\n                        </div>\n                        <div className='field'>\n                            <label>Username: </label>\n                            <input required type=\"text\" name=\"username\" value={this.state.username} onChange={this.onUsernameChange}/>\n                        </div>\n                        <br />\n                        <div className='field'>\n                            <label>Password: </label>\n                            <input required type=\"password\" name=\"password\" value={this.state.password} onChange={this.onPasswordChange}/>\n                        </div>\n                        <div className='field'>\n                            <label>Email: </label>\n                            <input required type=\"email\" name=\"email\" value={this.state.email} onChange={this.onEmailChange}/>\n                        </div>\n                        <br/>\n                        <button className='ui primary button' type=\"submit\" >Sign up</button>\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;have an account? <a href=\"/signin\">Sign in</a>\n                    </form>\n                </div>\n                <div className='column'>\n\n                </div>\n            </div>\n        );\n    }\n}\nexport default SignUp;","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Account from './components/account/account';\nimport SignIn from \"./components/signin/signin\";\nimport SignUp from \"./components/signup/signup\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={username:\"\",password:\"\",loadLoginPage:false};\n        if(this.props.location.pathname==='/') {\n            this.props.history.push('/signin');\n        }\n    }\n    componentDidMount(){\n\n    }\n     render(){\n         return  (\n             <Router>\n                         <Route path=\"/signup\" component={SignUp} />\n                         <Route exact path=\"/signin\" component={SignIn}/>\n                         <Route path=\"/account\" component={Account}/>\n             </Router>\n         );\n     }\n}\n// class Home extends React.Component{\n//     render(){\n//         return (\n//             <h2>Home page</h2>\n//         )\n//     }\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <Route path='/' component={App}/>\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}